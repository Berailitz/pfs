// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remotetree.proto

package remotetree

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeIsReadRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsRead               bool     `protobuf:"varint,2,opt,name=isRead,proto3" json:"isRead,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeIsReadRequest) Reset()         { *m = NodeIsReadRequest{} }
func (m *NodeIsReadRequest) String() string { return proto.CompactTextString(m) }
func (*NodeIsReadRequest) ProtoMessage()    {}
func (*NodeIsReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{0}
}

func (m *NodeIsReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeIsReadRequest.Unmarshal(m, b)
}
func (m *NodeIsReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeIsReadRequest.Marshal(b, m, deterministic)
}
func (m *NodeIsReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeIsReadRequest.Merge(m, src)
}
func (m *NodeIsReadRequest) XXX_Size() int {
	return xxx_messageInfo_NodeIsReadRequest.Size(m)
}
func (m *NodeIsReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeIsReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeIsReadRequest proto.InternalMessageInfo

func (m *NodeIsReadRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NodeIsReadRequest) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

type Node struct {
	NID                  uint64            `protobuf:"varint,1,opt,name=NID,proto3" json:"NID,omitempty"`
	NAttr                *InodeAttributes  `protobuf:"bytes,2,opt,name=NAttr,proto3" json:"NAttr,omitempty"`
	NTarget              string            `protobuf:"bytes,3,opt,name=NTarget,proto3" json:"NTarget,omitempty"`
	NXattrs              map[string][]byte `protobuf:"bytes,4,rep,name=NXattrs,proto3" json:"NXattrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NEntries             []*Dirent         `protobuf:"bytes,5,rep,name=NEntries,proto3" json:"NEntries,omitempty"`
	NContents            []byte            `protobuf:"bytes,6,opt,name=NContents,proto3" json:"NContents,omitempty"`
	CanLock              int32             `protobuf:"varint,7,opt,name=canLock,proto3" json:"canLock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNID() uint64 {
	if m != nil {
		return m.NID
	}
	return 0
}

func (m *Node) GetNAttr() *InodeAttributes {
	if m != nil {
		return m.NAttr
	}
	return nil
}

func (m *Node) GetNTarget() string {
	if m != nil {
		return m.NTarget
	}
	return ""
}

func (m *Node) GetNXattrs() map[string][]byte {
	if m != nil {
		return m.NXattrs
	}
	return nil
}

func (m *Node) GetNEntries() []*Dirent {
	if m != nil {
		return m.NEntries
	}
	return nil
}

func (m *Node) GetNContents() []byte {
	if m != nil {
		return m.NContents
	}
	return nil
}

func (m *Node) GetCanLock() int32 {
	if m != nil {
		return m.CanLock
	}
	return 0
}

type LookUpInodeRequest struct {
	ParentID             uint64   `protobuf:"varint,1,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookUpInodeRequest) Reset()         { *m = LookUpInodeRequest{} }
func (m *LookUpInodeRequest) String() string { return proto.CompactTextString(m) }
func (*LookUpInodeRequest) ProtoMessage()    {}
func (*LookUpInodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{2}
}

func (m *LookUpInodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookUpInodeRequest.Unmarshal(m, b)
}
func (m *LookUpInodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookUpInodeRequest.Marshal(b, m, deterministic)
}
func (m *LookUpInodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookUpInodeRequest.Merge(m, src)
}
func (m *LookUpInodeRequest) XXX_Size() int {
	return xxx_messageInfo_LookUpInodeRequest.Size(m)
}
func (m *LookUpInodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookUpInodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookUpInodeRequest proto.InternalMessageInfo

func (m *LookUpInodeRequest) GetParentID() uint64 {
	if m != nil {
		return m.ParentID
	}
	return 0
}

func (m *LookUpInodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LookUpInodeReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Id                   uint64           `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Attr                 *InodeAttributes `protobuf:"bytes,3,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LookUpInodeReply) Reset()         { *m = LookUpInodeReply{} }
func (m *LookUpInodeReply) String() string { return proto.CompactTextString(m) }
func (*LookUpInodeReply) ProtoMessage()    {}
func (*LookUpInodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{3}
}

func (m *LookUpInodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookUpInodeReply.Unmarshal(m, b)
}
func (m *LookUpInodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookUpInodeReply.Marshal(b, m, deterministic)
}
func (m *LookUpInodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookUpInodeReply.Merge(m, src)
}
func (m *LookUpInodeReply) XXX_Size() int {
	return xxx_messageInfo_LookUpInodeReply.Size(m)
}
func (m *LookUpInodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LookUpInodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_LookUpInodeReply proto.InternalMessageInfo

func (m *LookUpInodeReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *LookUpInodeReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LookUpInodeReply) GetAttr() *InodeAttributes {
	if m != nil {
		return m.Attr
	}
	return nil
}

type GetInodeAttributesReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Attr                 *InodeAttributes `protobuf:"bytes,3,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetInodeAttributesReply) Reset()         { *m = GetInodeAttributesReply{} }
func (m *GetInodeAttributesReply) String() string { return proto.CompactTextString(m) }
func (*GetInodeAttributesReply) ProtoMessage()    {}
func (*GetInodeAttributesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{4}
}

func (m *GetInodeAttributesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInodeAttributesReply.Unmarshal(m, b)
}
func (m *GetInodeAttributesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInodeAttributesReply.Marshal(b, m, deterministic)
}
func (m *GetInodeAttributesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInodeAttributesReply.Merge(m, src)
}
func (m *GetInodeAttributesReply) XXX_Size() int {
	return xxx_messageInfo_GetInodeAttributesReply.Size(m)
}
func (m *GetInodeAttributesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInodeAttributesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetInodeAttributesReply proto.InternalMessageInfo

func (m *GetInodeAttributesReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *GetInodeAttributesReply) GetAttr() *InodeAttributes {
	if m != nil {
		return m.Attr
	}
	return nil
}

type SetInodeAttributesRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HasSize              bool     `protobuf:"varint,2,opt,name=hasSize,proto3" json:"hasSize,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	HasMode              bool     `protobuf:"varint,4,opt,name=hasMode,proto3" json:"hasMode,omitempty"`
	Mode                 uint32   `protobuf:"varint,5,opt,name=mode,proto3" json:"mode,omitempty"`
	HasMtime             bool     `protobuf:"varint,6,opt,name=hasMtime,proto3" json:"hasMtime,omitempty"`
	Mtime                int64    `protobuf:"varint,7,opt,name=mtime,proto3" json:"mtime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetInodeAttributesRequest) Reset()         { *m = SetInodeAttributesRequest{} }
func (m *SetInodeAttributesRequest) String() string { return proto.CompactTextString(m) }
func (*SetInodeAttributesRequest) ProtoMessage()    {}
func (*SetInodeAttributesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{5}
}

func (m *SetInodeAttributesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetInodeAttributesRequest.Unmarshal(m, b)
}
func (m *SetInodeAttributesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetInodeAttributesRequest.Marshal(b, m, deterministic)
}
func (m *SetInodeAttributesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetInodeAttributesRequest.Merge(m, src)
}
func (m *SetInodeAttributesRequest) XXX_Size() int {
	return xxx_messageInfo_SetInodeAttributesRequest.Size(m)
}
func (m *SetInodeAttributesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetInodeAttributesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetInodeAttributesRequest proto.InternalMessageInfo

func (m *SetInodeAttributesRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SetInodeAttributesRequest) GetHasSize() bool {
	if m != nil {
		return m.HasSize
	}
	return false
}

func (m *SetInodeAttributesRequest) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SetInodeAttributesRequest) GetHasMode() bool {
	if m != nil {
		return m.HasMode
	}
	return false
}

func (m *SetInodeAttributesRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *SetInodeAttributesRequest) GetHasMtime() bool {
	if m != nil {
		return m.HasMtime
	}
	return false
}

func (m *SetInodeAttributesRequest) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

type SetInodeAttributesReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Attr                 *InodeAttributes `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SetInodeAttributesReply) Reset()         { *m = SetInodeAttributesReply{} }
func (m *SetInodeAttributesReply) String() string { return proto.CompactTextString(m) }
func (*SetInodeAttributesReply) ProtoMessage()    {}
func (*SetInodeAttributesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{6}
}

func (m *SetInodeAttributesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetInodeAttributesReply.Unmarshal(m, b)
}
func (m *SetInodeAttributesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetInodeAttributesReply.Marshal(b, m, deterministic)
}
func (m *SetInodeAttributesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetInodeAttributesReply.Merge(m, src)
}
func (m *SetInodeAttributesReply) XXX_Size() int {
	return xxx_messageInfo_SetInodeAttributesReply.Size(m)
}
func (m *SetInodeAttributesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetInodeAttributesReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetInodeAttributesReply proto.InternalMessageInfo

func (m *SetInodeAttributesReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *SetInodeAttributesReply) GetAttr() *InodeAttributes {
	if m != nil {
		return m.Attr
	}
	return nil
}

type MkDirRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkDirRequest) Reset()         { *m = MkDirRequest{} }
func (m *MkDirRequest) String() string { return proto.CompactTextString(m) }
func (*MkDirRequest) ProtoMessage()    {}
func (*MkDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{7}
}

func (m *MkDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkDirRequest.Unmarshal(m, b)
}
func (m *MkDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkDirRequest.Marshal(b, m, deterministic)
}
func (m *MkDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkDirRequest.Merge(m, src)
}
func (m *MkDirRequest) XXX_Size() int {
	return xxx_messageInfo_MkDirRequest.Size(m)
}
func (m *MkDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MkDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MkDirRequest proto.InternalMessageInfo

func (m *MkDirRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MkDirRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MkDirRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type MkDirReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Id                   uint64           `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Attr                 *InodeAttributes `protobuf:"bytes,3,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MkDirReply) Reset()         { *m = MkDirReply{} }
func (m *MkDirReply) String() string { return proto.CompactTextString(m) }
func (*MkDirReply) ProtoMessage()    {}
func (*MkDirReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{8}
}

func (m *MkDirReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkDirReply.Unmarshal(m, b)
}
func (m *MkDirReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkDirReply.Marshal(b, m, deterministic)
}
func (m *MkDirReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkDirReply.Merge(m, src)
}
func (m *MkDirReply) XXX_Size() int {
	return xxx_messageInfo_MkDirReply.Size(m)
}
func (m *MkDirReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MkDirReply.DiscardUnknown(m)
}

var xxx_messageInfo_MkDirReply proto.InternalMessageInfo

func (m *MkDirReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *MkDirReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MkDirReply) GetAttr() *InodeAttributes {
	if m != nil {
		return m.Attr
	}
	return nil
}

type CreateNodeRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNodeRequest) Reset()         { *m = CreateNodeRequest{} }
func (m *CreateNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeRequest) ProtoMessage()    {}
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{9}
}

func (m *CreateNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeRequest.Unmarshal(m, b)
}
func (m *CreateNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeRequest.Marshal(b, m, deterministic)
}
func (m *CreateNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeRequest.Merge(m, src)
}
func (m *CreateNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeRequest.Size(m)
}
func (m *CreateNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeRequest proto.InternalMessageInfo

func (m *CreateNodeRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNodeRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type CreateNodeReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Entry                *ChildInodeEntry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateNodeReply) Reset()         { *m = CreateNodeReply{} }
func (m *CreateNodeReply) String() string { return proto.CompactTextString(m) }
func (*CreateNodeReply) ProtoMessage()    {}
func (*CreateNodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{10}
}

func (m *CreateNodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeReply.Unmarshal(m, b)
}
func (m *CreateNodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeReply.Marshal(b, m, deterministic)
}
func (m *CreateNodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeReply.Merge(m, src)
}
func (m *CreateNodeReply) XXX_Size() int {
	return xxx_messageInfo_CreateNodeReply.Size(m)
}
func (m *CreateNodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeReply proto.InternalMessageInfo

func (m *CreateNodeReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *CreateNodeReply) GetEntry() *ChildInodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type CreateFileRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Flags                uint32   `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFileRequest) Reset()         { *m = CreateFileRequest{} }
func (m *CreateFileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFileRequest) ProtoMessage()    {}
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{11}
}

func (m *CreateFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileRequest.Unmarshal(m, b)
}
func (m *CreateFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileRequest.Marshal(b, m, deterministic)
}
func (m *CreateFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileRequest.Merge(m, src)
}
func (m *CreateFileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFileRequest.Size(m)
}
func (m *CreateFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileRequest proto.InternalMessageInfo

func (m *CreateFileRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateFileRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *CreateFileRequest) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type CreateFileReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Entry                *ChildInodeEntry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	Handle               uint64           `protobuf:"varint,3,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateFileReply) Reset()         { *m = CreateFileReply{} }
func (m *CreateFileReply) String() string { return proto.CompactTextString(m) }
func (*CreateFileReply) ProtoMessage()    {}
func (*CreateFileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{12}
}

func (m *CreateFileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileReply.Unmarshal(m, b)
}
func (m *CreateFileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileReply.Marshal(b, m, deterministic)
}
func (m *CreateFileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileReply.Merge(m, src)
}
func (m *CreateFileReply) XXX_Size() int {
	return xxx_messageInfo_CreateFileReply.Size(m)
}
func (m *CreateFileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileReply proto.InternalMessageInfo

func (m *CreateFileReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *CreateFileReply) GetEntry() *ChildInodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *CreateFileReply) GetHandle() uint64 {
	if m != nil {
		return m.Handle
	}
	return 0
}

type CreateSymlinkRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSymlinkRequest) Reset()         { *m = CreateSymlinkRequest{} }
func (m *CreateSymlinkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSymlinkRequest) ProtoMessage()    {}
func (*CreateSymlinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{13}
}

func (m *CreateSymlinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSymlinkRequest.Unmarshal(m, b)
}
func (m *CreateSymlinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSymlinkRequest.Marshal(b, m, deterministic)
}
func (m *CreateSymlinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSymlinkRequest.Merge(m, src)
}
func (m *CreateSymlinkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSymlinkRequest.Size(m)
}
func (m *CreateSymlinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSymlinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSymlinkRequest proto.InternalMessageInfo

func (m *CreateSymlinkRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateSymlinkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSymlinkRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type CreateLinkRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TargetID             uint64   `protobuf:"varint,3,opt,name=targetID,proto3" json:"targetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLinkRequest) Reset()         { *m = CreateLinkRequest{} }
func (m *CreateLinkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLinkRequest) ProtoMessage()    {}
func (*CreateLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{14}
}

func (m *CreateLinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLinkRequest.Unmarshal(m, b)
}
func (m *CreateLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLinkRequest.Marshal(b, m, deterministic)
}
func (m *CreateLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLinkRequest.Merge(m, src)
}
func (m *CreateLinkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLinkRequest.Size(m)
}
func (m *CreateLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLinkRequest proto.InternalMessageInfo

func (m *CreateLinkRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateLinkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateLinkRequest) GetTargetID() uint64 {
	if m != nil {
		return m.TargetID
	}
	return 0
}

type CreateSymlinkReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Id                   uint64           `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Attr                 *InodeAttributes `protobuf:"bytes,3,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateSymlinkReply) Reset()         { *m = CreateSymlinkReply{} }
func (m *CreateSymlinkReply) String() string { return proto.CompactTextString(m) }
func (*CreateSymlinkReply) ProtoMessage()    {}
func (*CreateSymlinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{15}
}

func (m *CreateSymlinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSymlinkReply.Unmarshal(m, b)
}
func (m *CreateSymlinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSymlinkReply.Marshal(b, m, deterministic)
}
func (m *CreateSymlinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSymlinkReply.Merge(m, src)
}
func (m *CreateSymlinkReply) XXX_Size() int {
	return xxx_messageInfo_CreateSymlinkReply.Size(m)
}
func (m *CreateSymlinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSymlinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSymlinkReply proto.InternalMessageInfo

func (m *CreateSymlinkReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *CreateSymlinkReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateSymlinkReply) GetAttr() *InodeAttributes {
	if m != nil {
		return m.Attr
	}
	return nil
}

type CreateLinkReply struct {
	Err                  *Error           `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Attr                 *InodeAttributes `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateLinkReply) Reset()         { *m = CreateLinkReply{} }
func (m *CreateLinkReply) String() string { return proto.CompactTextString(m) }
func (*CreateLinkReply) ProtoMessage()    {}
func (*CreateLinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{16}
}

func (m *CreateLinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLinkReply.Unmarshal(m, b)
}
func (m *CreateLinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLinkReply.Marshal(b, m, deterministic)
}
func (m *CreateLinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLinkReply.Merge(m, src)
}
func (m *CreateLinkReply) XXX_Size() int {
	return xxx_messageInfo_CreateLinkReply.Size(m)
}
func (m *CreateLinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLinkReply proto.InternalMessageInfo

func (m *CreateLinkReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *CreateLinkReply) GetAttr() *InodeAttributes {
	if m != nil {
		return m.Attr
	}
	return nil
}

type RenameRequest struct {
	OldParent            uint64   `protobuf:"varint,1,opt,name=oldParent,proto3" json:"oldParent,omitempty"`
	OldName              string   `protobuf:"bytes,2,opt,name=oldName,proto3" json:"oldName,omitempty"`
	NewParent            uint64   `protobuf:"varint,3,opt,name=newParent,proto3" json:"newParent,omitempty"`
	NewName              string   `protobuf:"bytes,4,opt,name=newName,proto3" json:"newName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameRequest) Reset()         { *m = RenameRequest{} }
func (m *RenameRequest) String() string { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()    {}
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{17}
}

func (m *RenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameRequest.Unmarshal(m, b)
}
func (m *RenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameRequest.Marshal(b, m, deterministic)
}
func (m *RenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameRequest.Merge(m, src)
}
func (m *RenameRequest) XXX_Size() int {
	return xxx_messageInfo_RenameRequest.Size(m)
}
func (m *RenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameRequest proto.InternalMessageInfo

func (m *RenameRequest) GetOldParent() uint64 {
	if m != nil {
		return m.OldParent
	}
	return 0
}

func (m *RenameRequest) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

func (m *RenameRequest) GetNewParent() uint64 {
	if m != nil {
		return m.NewParent
	}
	return 0
}

func (m *RenameRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

type RmDirRequest struct {
	Parent               uint64   `protobuf:"varint,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RmDirRequest) Reset()         { *m = RmDirRequest{} }
func (m *RmDirRequest) String() string { return proto.CompactTextString(m) }
func (*RmDirRequest) ProtoMessage()    {}
func (*RmDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{18}
}

func (m *RmDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmDirRequest.Unmarshal(m, b)
}
func (m *RmDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmDirRequest.Marshal(b, m, deterministic)
}
func (m *RmDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmDirRequest.Merge(m, src)
}
func (m *RmDirRequest) XXX_Size() int {
	return xxx_messageInfo_RmDirRequest.Size(m)
}
func (m *RmDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RmDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RmDirRequest proto.InternalMessageInfo

func (m *RmDirRequest) GetParent() uint64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *RmDirRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UnlinkRequest struct {
	Parent               uint64   `protobuf:"varint,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlinkRequest) Reset()         { *m = UnlinkRequest{} }
func (m *UnlinkRequest) String() string { return proto.CompactTextString(m) }
func (*UnlinkRequest) ProtoMessage()    {}
func (*UnlinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{19}
}

func (m *UnlinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlinkRequest.Unmarshal(m, b)
}
func (m *UnlinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlinkRequest.Marshal(b, m, deterministic)
}
func (m *UnlinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlinkRequest.Merge(m, src)
}
func (m *UnlinkRequest) XXX_Size() int {
	return xxx_messageInfo_UnlinkRequest.Size(m)
}
func (m *UnlinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlinkRequest proto.InternalMessageInfo

func (m *UnlinkRequest) GetParent() uint64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *UnlinkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpenXRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Flags                uint32   `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenXRequest) Reset()         { *m = OpenXRequest{} }
func (m *OpenXRequest) String() string { return proto.CompactTextString(m) }
func (*OpenXRequest) ProtoMessage()    {}
func (*OpenXRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{20}
}

func (m *OpenXRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenXRequest.Unmarshal(m, b)
}
func (m *OpenXRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenXRequest.Marshal(b, m, deterministic)
}
func (m *OpenXRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenXRequest.Merge(m, src)
}
func (m *OpenXRequest) XXX_Size() int {
	return xxx_messageInfo_OpenXRequest.Size(m)
}
func (m *OpenXRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenXRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenXRequest proto.InternalMessageInfo

func (m *OpenXRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OpenXRequest) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type RemoveXattrRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveXattrRequest) Reset()         { *m = RemoveXattrRequest{} }
func (m *RemoveXattrRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveXattrRequest) ProtoMessage()    {}
func (*RemoveXattrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{21}
}

func (m *RemoveXattrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveXattrRequest.Unmarshal(m, b)
}
func (m *RemoveXattrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveXattrRequest.Marshal(b, m, deterministic)
}
func (m *RemoveXattrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveXattrRequest.Merge(m, src)
}
func (m *RemoveXattrRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveXattrRequest.Size(m)
}
func (m *RemoveXattrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveXattrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveXattrRequest proto.InternalMessageInfo

func (m *RemoveXattrRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RemoveXattrRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReadXRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Length               uint64   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadXRequest) Reset()         { *m = ReadXRequest{} }
func (m *ReadXRequest) String() string { return proto.CompactTextString(m) }
func (*ReadXRequest) ProtoMessage()    {}
func (*ReadXRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{22}
}

func (m *ReadXRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadXRequest.Unmarshal(m, b)
}
func (m *ReadXRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadXRequest.Marshal(b, m, deterministic)
}
func (m *ReadXRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadXRequest.Merge(m, src)
}
func (m *ReadXRequest) XXX_Size() int {
	return xxx_messageInfo_ReadXRequest.Size(m)
}
func (m *ReadXRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadXRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadXRequest proto.InternalMessageInfo

func (m *ReadXRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReadXRequest) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ReadXRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ReadXReply struct {
	Err                  *Error   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	BytesRead            uint64   `protobuf:"varint,2,opt,name=bytesRead,proto3" json:"bytesRead,omitempty"`
	Buf                  []byte   `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadXReply) Reset()         { *m = ReadXReply{} }
func (m *ReadXReply) String() string { return proto.CompactTextString(m) }
func (*ReadXReply) ProtoMessage()    {}
func (*ReadXReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{23}
}

func (m *ReadXReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadXReply.Unmarshal(m, b)
}
func (m *ReadXReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadXReply.Marshal(b, m, deterministic)
}
func (m *ReadXReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadXReply.Merge(m, src)
}
func (m *ReadXReply) XXX_Size() int {
	return xxx_messageInfo_ReadXReply.Size(m)
}
func (m *ReadXReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadXReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadXReply proto.InternalMessageInfo

func (m *ReadXReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ReadXReply) GetBytesRead() uint64 {
	if m != nil {
		return m.BytesRead
	}
	return 0
}

func (m *ReadXReply) GetBuf() []byte {
	if m != nil {
		return m.Buf
	}
	return nil
}

type WriteXRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteXRequest) Reset()         { *m = WriteXRequest{} }
func (m *WriteXRequest) String() string { return proto.CompactTextString(m) }
func (*WriteXRequest) ProtoMessage()    {}
func (*WriteXRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{24}
}

func (m *WriteXRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteXRequest.Unmarshal(m, b)
}
func (m *WriteXRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteXRequest.Marshal(b, m, deterministic)
}
func (m *WriteXRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteXRequest.Merge(m, src)
}
func (m *WriteXRequest) XXX_Size() int {
	return xxx_messageInfo_WriteXRequest.Size(m)
}
func (m *WriteXRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteXRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteXRequest proto.InternalMessageInfo

func (m *WriteXRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WriteXRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteXRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Uint64Reply struct {
	Err                  *Error   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Num                  uint64   `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uint64Reply) Reset()         { *m = Uint64Reply{} }
func (m *Uint64Reply) String() string { return proto.CompactTextString(m) }
func (*Uint64Reply) ProtoMessage()    {}
func (*Uint64Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{25}
}

func (m *Uint64Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uint64Reply.Unmarshal(m, b)
}
func (m *Uint64Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uint64Reply.Marshal(b, m, deterministic)
}
func (m *Uint64Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uint64Reply.Merge(m, src)
}
func (m *Uint64Reply) XXX_Size() int {
	return xxx_messageInfo_Uint64Reply.Size(m)
}
func (m *Uint64Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Uint64Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Uint64Reply proto.InternalMessageInfo

func (m *Uint64Reply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *Uint64Reply) GetNum() uint64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type ReadSymlinkReply struct {
	Err                  *Error   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadSymlinkReply) Reset()         { *m = ReadSymlinkReply{} }
func (m *ReadSymlinkReply) String() string { return proto.CompactTextString(m) }
func (*ReadSymlinkReply) ProtoMessage()    {}
func (*ReadSymlinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{26}
}

func (m *ReadSymlinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSymlinkReply.Unmarshal(m, b)
}
func (m *ReadSymlinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSymlinkReply.Marshal(b, m, deterministic)
}
func (m *ReadSymlinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSymlinkReply.Merge(m, src)
}
func (m *ReadSymlinkReply) XXX_Size() int {
	return xxx_messageInfo_ReadSymlinkReply.Size(m)
}
func (m *ReadSymlinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSymlinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSymlinkReply proto.InternalMessageInfo

func (m *ReadSymlinkReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ReadSymlinkReply) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type GetXattrRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Length               uint64   `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetXattrRequest) Reset()         { *m = GetXattrRequest{} }
func (m *GetXattrRequest) String() string { return proto.CompactTextString(m) }
func (*GetXattrRequest) ProtoMessage()    {}
func (*GetXattrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{27}
}

func (m *GetXattrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetXattrRequest.Unmarshal(m, b)
}
func (m *GetXattrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetXattrRequest.Marshal(b, m, deterministic)
}
func (m *GetXattrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetXattrRequest.Merge(m, src)
}
func (m *GetXattrRequest) XXX_Size() int {
	return xxx_messageInfo_GetXattrRequest.Size(m)
}
func (m *GetXattrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetXattrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetXattrRequest proto.InternalMessageInfo

func (m *GetXattrRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetXattrRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetXattrRequest) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type ListXattrRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Length               uint64   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListXattrRequest) Reset()         { *m = ListXattrRequest{} }
func (m *ListXattrRequest) String() string { return proto.CompactTextString(m) }
func (*ListXattrRequest) ProtoMessage()    {}
func (*ListXattrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{28}
}

func (m *ListXattrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListXattrRequest.Unmarshal(m, b)
}
func (m *ListXattrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListXattrRequest.Marshal(b, m, deterministic)
}
func (m *ListXattrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListXattrRequest.Merge(m, src)
}
func (m *ListXattrRequest) XXX_Size() int {
	return xxx_messageInfo_ListXattrRequest.Size(m)
}
func (m *ListXattrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListXattrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListXattrRequest proto.InternalMessageInfo

func (m *ListXattrRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ListXattrRequest) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type SetXattrRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Flag                 uint32   `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetXattrRequest) Reset()         { *m = SetXattrRequest{} }
func (m *SetXattrRequest) String() string { return proto.CompactTextString(m) }
func (*SetXattrRequest) ProtoMessage()    {}
func (*SetXattrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{29}
}

func (m *SetXattrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetXattrRequest.Unmarshal(m, b)
}
func (m *SetXattrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetXattrRequest.Marshal(b, m, deterministic)
}
func (m *SetXattrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetXattrRequest.Merge(m, src)
}
func (m *SetXattrRequest) XXX_Size() int {
	return xxx_messageInfo_SetXattrRequest.Size(m)
}
func (m *SetXattrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetXattrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetXattrRequest proto.InternalMessageInfo

func (m *SetXattrRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SetXattrRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetXattrRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetXattrRequest) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

type FallocateRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mode                 uint32   `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Length               uint64   `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FallocateRequest) Reset()         { *m = FallocateRequest{} }
func (m *FallocateRequest) String() string { return proto.CompactTextString(m) }
func (*FallocateRequest) ProtoMessage()    {}
func (*FallocateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{30}
}

func (m *FallocateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FallocateRequest.Unmarshal(m, b)
}
func (m *FallocateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FallocateRequest.Marshal(b, m, deterministic)
}
func (m *FallocateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FallocateRequest.Merge(m, src)
}
func (m *FallocateRequest) XXX_Size() int {
	return xxx_messageInfo_FallocateRequest.Size(m)
}
func (m *FallocateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FallocateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FallocateRequest proto.InternalMessageInfo

func (m *FallocateRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FallocateRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *FallocateRequest) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type ChildInodeEntry struct {
	Child                uint64           `protobuf:"varint,1,opt,name=child,proto3" json:"child,omitempty"`
	Generation           uint64           `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	Attributes           *InodeAttributes `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	AttributesExpiration int64            `protobuf:"varint,4,opt,name=attributesExpiration,proto3" json:"attributesExpiration,omitempty"`
	EntryExpiration      int64            `protobuf:"varint,5,opt,name=entryExpiration,proto3" json:"entryExpiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChildInodeEntry) Reset()         { *m = ChildInodeEntry{} }
func (m *ChildInodeEntry) String() string { return proto.CompactTextString(m) }
func (*ChildInodeEntry) ProtoMessage()    {}
func (*ChildInodeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{31}
}

func (m *ChildInodeEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChildInodeEntry.Unmarshal(m, b)
}
func (m *ChildInodeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChildInodeEntry.Marshal(b, m, deterministic)
}
func (m *ChildInodeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChildInodeEntry.Merge(m, src)
}
func (m *ChildInodeEntry) XXX_Size() int {
	return xxx_messageInfo_ChildInodeEntry.Size(m)
}
func (m *ChildInodeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ChildInodeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ChildInodeEntry proto.InternalMessageInfo

func (m *ChildInodeEntry) GetChild() uint64 {
	if m != nil {
		return m.Child
	}
	return 0
}

func (m *ChildInodeEntry) GetGeneration() uint64 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *ChildInodeEntry) GetAttributes() *InodeAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ChildInodeEntry) GetAttributesExpiration() int64 {
	if m != nil {
		return m.AttributesExpiration
	}
	return 0
}

func (m *ChildInodeEntry) GetEntryExpiration() int64 {
	if m != nil {
		return m.EntryExpiration
	}
	return 0
}

type InodeAttributes struct {
	Size                 uint64   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Nlink                uint32   `protobuf:"varint,2,opt,name=nlink,proto3" json:"nlink,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Atime                int64    `protobuf:"varint,4,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime                int64    `protobuf:"varint,5,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime                int64    `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Crtime               int64    `protobuf:"varint,7,opt,name=crtime,proto3" json:"crtime,omitempty"`
	Uid                  uint32   `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint32   `protobuf:"varint,9,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InodeAttributes) Reset()         { *m = InodeAttributes{} }
func (m *InodeAttributes) String() string { return proto.CompactTextString(m) }
func (*InodeAttributes) ProtoMessage()    {}
func (*InodeAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{32}
}

func (m *InodeAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InodeAttributes.Unmarshal(m, b)
}
func (m *InodeAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InodeAttributes.Marshal(b, m, deterministic)
}
func (m *InodeAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InodeAttributes.Merge(m, src)
}
func (m *InodeAttributes) XXX_Size() int {
	return xxx_messageInfo_InodeAttributes.Size(m)
}
func (m *InodeAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_InodeAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_InodeAttributes proto.InternalMessageInfo

func (m *InodeAttributes) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *InodeAttributes) GetNlink() uint32 {
	if m != nil {
		return m.Nlink
	}
	return 0
}

func (m *InodeAttributes) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *InodeAttributes) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *InodeAttributes) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *InodeAttributes) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *InodeAttributes) GetCrtime() int64 {
	if m != nil {
		return m.Crtime
	}
	return 0
}

func (m *InodeAttributes) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *InodeAttributes) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type Dirent struct {
	// The (opaque) offset within the directory file of the entry following this
	// one. See notes on fuseops.ReadDirOp.Offset for details.
	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// The inode of the child file or directory, and its name within the parent.
	Inode uint64 `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the child. The zero value (DT_Unknown) is legal, but means
	// that the kernel will need to call GetAttr when the type is needed.
	Type                 uint32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dirent) Reset()         { *m = Dirent{} }
func (m *Dirent) String() string { return proto.CompactTextString(m) }
func (*Dirent) ProtoMessage()    {}
func (*Dirent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{33}
}

func (m *Dirent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dirent.Unmarshal(m, b)
}
func (m *Dirent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dirent.Marshal(b, m, deterministic)
}
func (m *Dirent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dirent.Merge(m, src)
}
func (m *Dirent) XXX_Size() int {
	return xxx_messageInfo_Dirent.Size(m)
}
func (m *Dirent) XXX_DiscardUnknown() {
	xxx_messageInfo_Dirent.DiscardUnknown(m)
}

var xxx_messageInfo_Dirent proto.InternalMessageInfo

func (m *Dirent) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Dirent) GetInode() uint64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *Dirent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dirent) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type Error struct {
	Status               int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{34}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type UInt64ID struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UInt64ID) Reset()         { *m = UInt64ID{} }
func (m *UInt64ID) String() string { return proto.CompactTextString(m) }
func (*UInt64ID) ProtoMessage()    {}
func (*UInt64ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{35}
}

func (m *UInt64ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UInt64ID.Unmarshal(m, b)
}
func (m *UInt64ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UInt64ID.Marshal(b, m, deterministic)
}
func (m *UInt64ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UInt64ID.Merge(m, src)
}
func (m *UInt64ID) XXX_Size() int {
	return xxx_messageInfo_UInt64ID.Size(m)
}
func (m *UInt64ID) XXX_DiscardUnknown() {
	xxx_messageInfo_UInt64ID.DiscardUnknown(m)
}

var xxx_messageInfo_UInt64ID proto.InternalMessageInfo

func (m *UInt64ID) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type OwnerId struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OwnerId) Reset()         { *m = OwnerId{} }
func (m *OwnerId) String() string { return proto.CompactTextString(m) }
func (*OwnerId) ProtoMessage()    {}
func (*OwnerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{36}
}

func (m *OwnerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerId.Unmarshal(m, b)
}
func (m *OwnerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerId.Marshal(b, m, deterministic)
}
func (m *OwnerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerId.Merge(m, src)
}
func (m *OwnerId) XXX_Size() int {
	return xxx_messageInfo_OwnerId.Size(m)
}
func (m *OwnerId) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerId.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerId proto.InternalMessageInfo

func (m *OwnerId) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Addr struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Addr) Reset()         { *m = Addr{} }
func (m *Addr) String() string { return proto.CompactTextString(m) }
func (*Addr) ProtoMessage()    {}
func (*Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{37}
}

func (m *Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addr.Unmarshal(m, b)
}
func (m *Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addr.Marshal(b, m, deterministic)
}
func (m *Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addr.Merge(m, src)
}
func (m *Addr) XXX_Size() int {
	return xxx_messageInfo_Addr.Size(m)
}
func (m *Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_Addr.DiscardUnknown(m)
}

var xxx_messageInfo_Addr proto.InternalMessageInfo

func (m *Addr) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type IsOK struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsOK) Reset()         { *m = IsOK{} }
func (m *IsOK) String() string { return proto.CompactTextString(m) }
func (*IsOK) ProtoMessage()    {}
func (*IsOK) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{38}
}

func (m *IsOK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsOK.Unmarshal(m, b)
}
func (m *IsOK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsOK.Marshal(b, m, deterministic)
}
func (m *IsOK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsOK.Merge(m, src)
}
func (m *IsOK) XXX_Size() int {
	return xxx_messageInfo_IsOK.Size(m)
}
func (m *IsOK) XXX_DiscardUnknown() {
	xxx_messageInfo_IsOK.DiscardUnknown(m)
}

var xxx_messageInfo_IsOK proto.InternalMessageInfo

func (m *IsOK) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*NodeIsReadRequest)(nil), "remotetree.NodeIsReadRequest")
	proto.RegisterType((*Node)(nil), "remotetree.Node")
	proto.RegisterMapType((map[string][]byte)(nil), "remotetree.Node.NXattrsEntry")
	proto.RegisterType((*LookUpInodeRequest)(nil), "remotetree.LookUpInodeRequest")
	proto.RegisterType((*LookUpInodeReply)(nil), "remotetree.LookUpInodeReply")
	proto.RegisterType((*GetInodeAttributesReply)(nil), "remotetree.GetInodeAttributesReply")
	proto.RegisterType((*SetInodeAttributesRequest)(nil), "remotetree.SetInodeAttributesRequest")
	proto.RegisterType((*SetInodeAttributesReply)(nil), "remotetree.SetInodeAttributesReply")
	proto.RegisterType((*MkDirRequest)(nil), "remotetree.MkDirRequest")
	proto.RegisterType((*MkDirReply)(nil), "remotetree.MkDirReply")
	proto.RegisterType((*CreateNodeRequest)(nil), "remotetree.CreateNodeRequest")
	proto.RegisterType((*CreateNodeReply)(nil), "remotetree.CreateNodeReply")
	proto.RegisterType((*CreateFileRequest)(nil), "remotetree.CreateFileRequest")
	proto.RegisterType((*CreateFileReply)(nil), "remotetree.CreateFileReply")
	proto.RegisterType((*CreateSymlinkRequest)(nil), "remotetree.CreateSymlinkRequest")
	proto.RegisterType((*CreateLinkRequest)(nil), "remotetree.CreateLinkRequest")
	proto.RegisterType((*CreateSymlinkReply)(nil), "remotetree.CreateSymlinkReply")
	proto.RegisterType((*CreateLinkReply)(nil), "remotetree.CreateLinkReply")
	proto.RegisterType((*RenameRequest)(nil), "remotetree.RenameRequest")
	proto.RegisterType((*RmDirRequest)(nil), "remotetree.RmDirRequest")
	proto.RegisterType((*UnlinkRequest)(nil), "remotetree.UnlinkRequest")
	proto.RegisterType((*OpenXRequest)(nil), "remotetree.OpenXRequest")
	proto.RegisterType((*RemoveXattrRequest)(nil), "remotetree.RemoveXattrRequest")
	proto.RegisterType((*ReadXRequest)(nil), "remotetree.ReadXRequest")
	proto.RegisterType((*ReadXReply)(nil), "remotetree.ReadXReply")
	proto.RegisterType((*WriteXRequest)(nil), "remotetree.WriteXRequest")
	proto.RegisterType((*Uint64Reply)(nil), "remotetree.Uint64Reply")
	proto.RegisterType((*ReadSymlinkReply)(nil), "remotetree.ReadSymlinkReply")
	proto.RegisterType((*GetXattrRequest)(nil), "remotetree.GetXattrRequest")
	proto.RegisterType((*ListXattrRequest)(nil), "remotetree.ListXattrRequest")
	proto.RegisterType((*SetXattrRequest)(nil), "remotetree.SetXattrRequest")
	proto.RegisterType((*FallocateRequest)(nil), "remotetree.FallocateRequest")
	proto.RegisterType((*ChildInodeEntry)(nil), "remotetree.ChildInodeEntry")
	proto.RegisterType((*InodeAttributes)(nil), "remotetree.InodeAttributes")
	proto.RegisterType((*Dirent)(nil), "remotetree.Dirent")
	proto.RegisterType((*Error)(nil), "remotetree.Error")
	proto.RegisterType((*UInt64ID)(nil), "remotetree.UInt64ID")
	proto.RegisterType((*OwnerId)(nil), "remotetree.OwnerId")
	proto.RegisterType((*Addr)(nil), "remotetree.Addr")
	proto.RegisterType((*IsOK)(nil), "remotetree.IsOK")
}

func init() {
	proto.RegisterFile("remotetree.proto", fileDescriptor_f8de7cc35295e1fb)
}

var fileDescriptor_f8de7cc35295e1fb = []byte{
	// 1628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdf, 0x73, 0xdb, 0xc4,
	0x13, 0xf7, 0xef, 0xd8, 0x1b, 0xe7, 0x1b, 0xf7, 0xbe, 0x99, 0xd4, 0x75, 0x43, 0xc7, 0x73, 0x1d,
	0x66, 0xfc, 0x14, 0xa6, 0xa1, 0xb4, 0x99, 0x04, 0x0a, 0x21, 0x6e, 0x8a, 0x69, 0xe2, 0xd0, 0x73,
	0x33, 0xf4, 0x09, 0x46, 0x89, 0x2e, 0x8e, 0xc6, 0xb2, 0x64, 0xa4, 0x73, 0x5b, 0xf7, 0x85, 0xe1,
	0xcf, 0xe2, 0x95, 0x77, 0x86, 0xff, 0x81, 0xbf, 0x84, 0xd9, 0xd3, 0x49, 0x3e, 0xd9, 0x92, 0xb1,
	0x0b, 0xf4, 0x4d, 0x7b, 0xb7, 0xbb, 0xf7, 0xd9, 0xbd, 0xbd, 0xbd, 0xcf, 0x09, 0x6a, 0x1e, 0x1f,
	0xba, 0x82, 0x0b, 0x8f, 0xf3, 0xdd, 0x91, 0xe7, 0x0a, 0x97, 0xc0, 0x74, 0x84, 0x1e, 0xc2, 0xad,
	0xae, 0x6b, 0xf2, 0x8e, 0xcf, 0xb8, 0x61, 0x32, 0xfe, 0xd3, 0x98, 0xfb, 0x82, 0xfc, 0x0f, 0x72,
	0x96, 0x59, 0xcf, 0x36, 0xb3, 0xad, 0x02, 0xcb, 0x59, 0x26, 0xd9, 0x86, 0x92, 0x25, 0x15, 0xea,
	0xb9, 0x66, 0xb6, 0x55, 0x66, 0x4a, 0xa2, 0xbf, 0xe5, 0xa0, 0x80, 0xd6, 0xa4, 0x06, 0xf9, 0x6e,
	0xa7, 0xad, 0x2c, 0xf0, 0x93, 0x3c, 0x80, 0x62, 0xf7, 0x48, 0x08, 0x4f, 0x5a, 0xac, 0xef, 0xdd,
	0xdd, 0xd5, 0x50, 0x74, 0x1c, 0xd7, 0xe4, 0x38, 0x69, 0x5d, 0x8e, 0x05, 0xf7, 0x59, 0xa0, 0x49,
	0xea, 0xb0, 0xd6, 0x7d, 0x69, 0x78, 0x7d, 0x2e, 0xea, 0xf9, 0x66, 0xb6, 0x55, 0x61, 0xa1, 0x48,
	0x1e, 0xc3, 0x5a, 0xf7, 0x95, 0x21, 0x84, 0xe7, 0xd7, 0x0b, 0xcd, 0x7c, 0x6b, 0x7d, 0xef, 0x23,
	0xdd, 0x1d, 0x22, 0xd8, 0x55, 0xf3, 0x4f, 0x1d, 0xe1, 0x4d, 0x58, 0xa8, 0x4d, 0x76, 0xa1, 0xdc,
	0xc5, 0x21, 0x8b, 0xfb, 0xf5, 0xa2, 0xb4, 0x24, 0xba, 0x65, 0xdb, 0xf2, 0xb8, 0x23, 0x58, 0xa4,
	0x43, 0x76, 0xa0, 0xd2, 0x3d, 0x76, 0x1d, 0xc1, 0x1d, 0xe1, 0xd7, 0x4b, 0xcd, 0x6c, 0xab, 0xca,
	0xa6, 0x03, 0x08, 0xf0, 0xca, 0x70, 0x4e, 0xdd, 0xab, 0x41, 0x7d, 0xad, 0x99, 0x6d, 0x15, 0x59,
	0x28, 0x36, 0x0e, 0xa0, 0xaa, 0x03, 0xc0, 0x7c, 0x0c, 0xf8, 0x44, 0xe6, 0xa3, 0xc2, 0xf0, 0x93,
	0x6c, 0x41, 0xf1, 0xb5, 0x61, 0x8f, 0xb9, 0xcc, 0x47, 0x95, 0x05, 0xc2, 0x41, 0x6e, 0x3f, 0x4b,
	0xdb, 0x40, 0x4e, 0x5d, 0x77, 0x70, 0x31, 0x92, 0x69, 0x09, 0xb7, 0xa0, 0x01, 0xe5, 0x91, 0x81,
	0xe8, 0xa2, 0xb4, 0x46, 0x32, 0x21, 0x50, 0x70, 0x8c, 0x61, 0xe0, 0xaa, 0xc2, 0xe4, 0x37, 0x7d,
	0x0b, 0xb5, 0x98, 0x97, 0x91, 0x3d, 0x21, 0xf7, 0x21, 0xcf, 0x3d, 0x4f, 0x9a, 0xaf, 0xef, 0xdd,
	0xd2, 0x03, 0x7f, 0xea, 0x79, 0xae, 0xc7, 0x70, 0x56, 0xed, 0x75, 0x2e, 0xda, 0xeb, 0x4f, 0xa0,
	0x80, 0x81, 0xc8, 0x2d, 0xf8, 0x9b, 0x7d, 0x93, 0x8a, 0xd4, 0x85, 0xdb, 0xcf, 0xb8, 0x98, 0x9d,
	0x5b, 0x1e, 0xc0, 0xca, 0x0b, 0xfe, 0x9a, 0x85, 0x3b, 0xbd, 0x84, 0x15, 0x93, 0x6b, 0xb7, 0x0e,
	0x6b, 0x37, 0x86, 0xdf, 0xb3, 0xde, 0x71, 0x55, 0xbc, 0xa1, 0x88, 0x69, 0xf4, 0x71, 0x38, 0x2f,
	0x75, 0xe5, 0xb7, 0xd2, 0x3e, 0x73, 0x4d, 0x5e, 0x2f, 0x44, 0xda, 0x28, 0xa2, 0xf6, 0x10, 0x87,
	0x8b, 0xcd, 0x6c, 0x6b, 0x83, 0xc9, 0x6f, 0xdc, 0x24, 0x9c, 0x16, 0xd6, 0x90, 0xcb, 0x6a, 0x29,
	0xb3, 0x48, 0xc6, 0x0d, 0x1f, 0xca, 0x09, 0x2c, 0x95, 0x3c, 0x0b, 0x04, 0x4c, 0x56, 0xef, 0xdf,
	0x48, 0x56, 0x6e, 0xd9, 0x64, 0x9d, 0x40, 0xf5, 0x6c, 0xd0, 0xb6, 0xbc, 0xb4, 0xf4, 0x24, 0xd4,
	0x52, 0x14, 0x6a, 0x7e, 0x1a, 0x2a, 0xf5, 0x00, 0x94, 0x9f, 0x0f, 0x57, 0x59, 0xcf, 0xe1, 0xd6,
	0xb1, 0xc7, 0x0d, 0xc1, 0xbb, 0xda, 0xc1, 0x78, 0xdf, 0x00, 0x2c, 0xd8, 0xd4, 0x9d, 0x2d, 0x1d,
	0xc5, 0x03, 0x28, 0x72, 0x3c, 0xd3, 0x49, 0x29, 0x3f, 0xbe, 0xb1, 0x6c, 0x53, 0x62, 0x0f, 0xfa,
	0x4e, 0xa0, 0x49, 0x8d, 0x10, 0xf7, 0x89, 0x65, 0xff, 0x53, 0xdc, 0x58, 0x47, 0xd7, 0xb6, 0xd1,
	0xf7, 0x65, 0x3d, 0x6e, 0xb0, 0x40, 0xa0, 0xbf, 0x64, 0xc3, 0x70, 0x82, 0x35, 0xfe, 0xc3, 0x70,
	0xb0, 0xfb, 0xdf, 0x18, 0x8e, 0x69, 0x87, 0x27, 0x45, 0x49, 0x94, 0xc1, 0x56, 0x00, 0xa1, 0x37,
	0x19, 0xda, 0x96, 0x33, 0x58, 0x25, 0xd2, 0x6d, 0x28, 0x09, 0xbd, 0xd5, 0x2b, 0x89, 0xf6, 0xc2,
	0xd4, 0x9d, 0xae, 0xe8, 0xb0, 0x01, 0xe5, 0xc0, 0x45, 0xa7, 0xad, 0x60, 0x46, 0x32, 0x7d, 0x07,
	0x64, 0x06, 0xe8, 0x87, 0xab, 0xe1, 0x7e, 0xb8, 0x4f, 0xa7, 0xab, 0x2d, 0xbc, 0xf2, 0x41, 0xff,
	0x19, 0x36, 0x18, 0xc7, 0x54, 0x84, 0x59, 0xdb, 0x81, 0x8a, 0x6b, 0x9b, 0xdf, 0xc9, 0x4b, 0x43,
	0x25, 0x6f, 0x3a, 0x80, 0x8d, 0xce, 0xb5, 0xcd, 0xee, 0x34, 0x8d, 0xa1, 0x88, 0x76, 0x0e, 0x7f,
	0xa3, 0xec, 0x82, 0x54, 0x4e, 0x07, 0xd0, 0xce, 0xe1, 0x6f, 0xa4, 0x5d, 0x21, 0xb0, 0x53, 0x22,
	0x3d, 0x80, 0x2a, 0x1b, 0x6a, 0x9d, 0x66, 0x1b, 0x4a, 0x23, 0x7d, 0x71, 0x25, 0x25, 0xde, 0x5e,
	0x87, 0xb0, 0x71, 0xe1, 0xe8, 0x35, 0xb4, 0x8a, 0xf1, 0x43, 0xa8, 0x9e, 0x8f, 0xb8, 0xf3, 0x2a,
	0xad, 0x5c, 0xa2, 0x13, 0x94, 0xd3, 0x4f, 0xd0, 0x3e, 0x10, 0xc6, 0x87, 0xee, 0x6b, 0x2e, 0xef,
	0xed, 0x15, 0x4a, 0x8d, 0x76, 0xa1, 0x8a, 0xec, 0xe7, 0xd5, 0x02, 0xb6, 0x64, 0x73, 0xa7, 0x2f,
	0x6e, 0x54, 0xdd, 0x28, 0x09, 0xc7, 0xdd, 0xeb, 0x6b, 0x9f, 0x87, 0x59, 0x55, 0x12, 0x35, 0x00,
	0x94, 0xbf, 0xa5, 0xab, 0x63, 0x07, 0x2a, 0x97, 0x13, 0x79, 0x73, 0x18, 0x61, 0x75, 0x4e, 0x07,
	0x90, 0x7d, 0x5c, 0x8e, 0xaf, 0xe5, 0x2a, 0x55, 0x86, 0x9f, 0xf4, 0x39, 0x6c, 0x7c, 0xef, 0x59,
	0x82, 0x2f, 0xc2, 0xac, 0xb0, 0xe5, 0x74, 0x6c, 0x18, 0xbf, 0x69, 0x08, 0x43, 0xf9, 0x92, 0xdf,
	0xb4, 0x0d, 0xeb, 0x17, 0x96, 0x23, 0x1e, 0x3d, 0x5c, 0x01, 0x70, 0x0d, 0xf2, 0xce, 0x78, 0xa8,
	0x9c, 0xe3, 0x27, 0x3d, 0x87, 0x1a, 0x82, 0x5d, 0xfd, 0x48, 0x4e, 0x5b, 0x47, 0x2e, 0xd6, 0x3a,
	0xce, 0x60, 0xf3, 0x19, 0x17, 0xab, 0xee, 0xa6, 0xb6, 0x5b, 0x79, 0x7d, 0xb7, 0xe8, 0x01, 0xd4,
	0x4e, 0x2d, 0x7f, 0xb1, 0xbf, 0x94, 0x9d, 0xa6, 0x3f, 0xc2, 0x66, 0xef, 0x3d, 0xa0, 0x44, 0x1c,
	0x31, 0xaf, 0x71, 0x44, 0xd4, 0xc4, 0x8a, 0x55, 0xfd, 0x5f, 0x7e, 0xd3, 0x2e, 0xd4, 0x4e, 0x0c,
	0xdb, 0x76, 0xaf, 0x0c, 0xb1, 0xe8, 0x82, 0x91, 0x97, 0x49, 0x4e, 0xbb, 0x4c, 0xd2, 0x82, 0xfd,
	0x13, 0xaf, 0x93, 0x78, 0xf7, 0x47, 0x34, 0x57, 0x38, 0xa4, 0x5c, 0x06, 0x02, 0xb9, 0x07, 0xd0,
	0xe7, 0x0e, 0xf7, 0x0c, 0x61, 0xb9, 0x8e, 0x0a, 0x5b, 0x1b, 0x21, 0x87, 0x00, 0x46, 0xd4, 0x9a,
	0x96, 0x69, 0x93, 0x9a, 0x3a, 0xd9, 0x83, 0xad, 0xa9, 0xf4, 0xf4, 0xed, 0xc8, 0x52, 0xcb, 0x14,
	0x24, 0x85, 0x4a, 0x9c, 0x23, 0x2d, 0xd8, 0x94, 0xd7, 0x94, 0xa6, 0x5e, 0x94, 0xea, 0xb3, 0xc3,
	0xf4, 0xf7, 0x2c, 0x6c, 0xce, 0xac, 0x1e, 0x71, 0xc0, 0xac, 0xc6, 0x01, 0xb7, 0xa0, 0x28, 0x7b,
	0x51, 0xd8, 0x2f, 0xa4, 0x90, 0x76, 0x37, 0x1b, 0x92, 0xe3, 0x05, 0x00, 0x03, 0x61, 0xca, 0xfc,
	0x8a, 0x1a, 0xf3, 0x93, 0xe9, 0x8c, 0x88, 0x62, 0x9e, 0x05, 0x02, 0x6e, 0xc8, 0x95, 0xa7, 0xd1,
	0x44, 0x25, 0xe1, 0x79, 0x19, 0x5b, 0x66, 0xbd, 0x2c, 0x17, 0xc3, 0x4f, 0x1c, 0xe9, 0x5b, 0x66,
	0xbd, 0x12, 0x8c, 0xf4, 0x2d, 0x93, 0xfe, 0x00, 0xa5, 0xe0, 0x01, 0xa3, 0x9d, 0xde, 0x6c, 0xec,
	0xf4, 0x6e, 0x41, 0xd1, 0x72, 0xc2, 0x1a, 0x28, 0xb0, 0x40, 0x88, 0x4a, 0x2f, 0x1f, 0x67, 0x1e,
	0x62, 0x32, 0xe2, 0x61, 0x91, 0xe1, 0x37, 0x7d, 0x00, 0x45, 0x79, 0xec, 0xd0, 0xbd, 0x2f, 0x0c,
	0x31, 0xf6, 0xa5, 0xfb, 0x3c, 0x53, 0x12, 0x42, 0x1a, 0xfa, 0x7d, 0x55, 0xc2, 0xf8, 0x49, 0x1b,
	0x50, 0xbe, 0xe8, 0x60, 0x6b, 0xe8, 0xb4, 0x67, 0xeb, 0x91, 0xde, 0x81, 0xb5, 0xf3, 0x37, 0x0e,
	0xf7, 0x3a, 0xe6, 0xdc, 0x54, 0x03, 0x0a, 0x47, 0xa6, 0xe9, 0x21, 0x0a, 0xc3, 0x34, 0x3d, 0xf5,
	0x6e, 0x92, 0xdf, 0x74, 0x1b, 0x0a, 0x1d, 0xff, 0xfc, 0x39, 0xda, 0xb8, 0x03, 0x39, 0x53, 0x66,
	0x39, 0x77, 0xb0, 0xf7, 0x47, 0x0d, 0xdb, 0x26, 0x96, 0xd5, 0x4b, 0x8f, 0x73, 0xf2, 0x04, 0x2a,
	0x27, 0x5c, 0x5c, 0xdd, 0xc8, 0xe7, 0xe8, 0xdc, 0xf3, 0x30, 0xf6, 0xbc, 0x6d, 0xd4, 0x66, 0xa7,
	0x69, 0x86, 0x7c, 0x05, 0x70, 0xe1, 0xd8, 0xee, 0xd5, 0x60, 0x19, 0x07, 0xf3, 0xad, 0x89, 0x66,
	0xc8, 0x19, 0xac, 0x6b, 0x2f, 0x30, 0x72, 0x4f, 0xd7, 0x99, 0x7f, 0xe0, 0x35, 0x76, 0x52, 0xe7,
	0x47, 0xf6, 0x84, 0x66, 0xc8, 0x0b, 0x20, 0xf3, 0xcf, 0x2a, 0xb2, 0xa5, 0x5b, 0x85, 0xa9, 0x6e,
	0xdc, 0xd7, 0x47, 0x53, 0x1e, 0x63, 0x34, 0x43, 0x2e, 0x81, 0xcc, 0x3f, 0x3e, 0xc8, 0xc7, 0xba,
	0x71, 0xea, 0xbb, 0x2a, 0xbe, 0x46, 0x2f, 0x75, 0x8d, 0x43, 0x28, 0xca, 0x77, 0x02, 0xa9, 0xeb,
	0xfa, 0xfa, 0x13, 0xa4, 0xb1, 0x9d, 0x30, 0x13, 0x18, 0x7f, 0x0b, 0x30, 0xe5, 0xe8, 0xf1, 0x4d,
	0x98, 0x7b, 0x08, 0x34, 0xee, 0xa6, 0x4d, 0xcf, 0xf8, 0x42, 0x82, 0x9c, 0xe4, 0x4b, 0x23, 0xe7,
	0x49, 0xbe, 0x22, 0x5e, 0x4d, 0x33, 0xa4, 0x07, 0x1b, 0x31, 0x02, 0x49, 0x9a, 0xf3, 0xfa, 0x71,
	0x12, 0xdc, 0xb8, 0xb7, 0x40, 0x63, 0x06, 0x20, 0x32, 0xc3, 0x24, 0x80, 0x1a, 0x05, 0x4e, 0x02,
	0x78, 0xaa, 0xf9, 0xda, 0x87, 0x52, 0x40, 0xfe, 0xc8, 0x1d, 0x5d, 0x31, 0x46, 0x08, 0x93, 0xab,
	0xf6, 0x11, 0x14, 0x25, 0x6b, 0x8b, 0xef, 0x97, 0x4e, 0xe4, 0x92, 0xed, 0xf6, 0xa1, 0x14, 0x30,
	0xb6, 0xf8, 0x8a, 0x31, 0x16, 0x97, 0x6c, 0xf9, 0x04, 0xd6, 0x90, 0xae, 0xcd, 0xad, 0xa9, 0x73,
	0xb8, 0xc6, 0xed, 0x98, 0xd3, 0x29, 0xdb, 0xa0, 0x19, 0xf2, 0x05, 0xac, 0xe1, 0x59, 0x9c, 0xc7,
	0xac, 0x71, 0xb2, 0x78, 0x8d, 0x4d, 0xd9, 0x15, 0xcd, 0x90, 0x03, 0xe4, 0xc9, 0x36, 0x37, 0x7c,
	0xfe, 0x8d, 0x7c, 0xc6, 0xa4, 0x1c, 0xa9, 0x44, 0xe8, 0x5f, 0x42, 0x19, 0x51, 0xca, 0x8a, 0x7a,
	0x2f, 0xec, 0x4f, 0xa0, 0x8c, 0x60, 0xe6, 0x1d, 0x2c, 0x09, 0xfe, 0x08, 0x2a, 0x92, 0xc7, 0x49,
	0x07, 0xb1, 0xc4, 0xc7, 0xe8, 0xdd, 0x22, 0x08, 0xc7, 0xb0, 0xae, 0xf1, 0xae, 0x94, 0xe8, 0x77,
	0x66, 0x11, 0xcc, 0xd4, 0xee, 0x11, 0x94, 0x43, 0xae, 0x45, 0xee, 0xce, 0x34, 0x1f, 0x9d, 0xf6,
	0x2c, 0x08, 0xe5, 0x18, 0x2a, 0x11, 0xbf, 0x22, 0xf1, 0x66, 0x38, 0x43, 0xbb, 0x16, 0x38, 0xf9,
	0x1a, 0x83, 0x89, 0x48, 0x7c, 0xbc, 0xe7, 0xce, 0xb3, 0xfb, 0xe4, 0x4d, 0xfd, 0x1c, 0xca, 0xbd,
	0xc4, 0x58, 0x66, 0x28, 0x5c, 0x5a, 0x35, 0x57, 0x22, 0x26, 0x16, 0x0f, 0x63, 0x96, 0xa0, 0xa5,
	0x9d, 0x3f, 0x78, 0x31, 0xe6, 0xde, 0x44, 0x5e, 0x8d, 0x29, 0xbb, 0x11, 0xbb, 0xaf, 0xf0, 0xa2,
	0xa4, 0x19, 0xf2, 0x19, 0x54, 0xa4, 0x9d, 0xbc, 0x37, 0x97, 0x37, 0x7b, 0x0c, 0xe5, 0xa3, 0x10,
	0xed, 0xff, 0x63, 0x15, 0x1c, 0x5c, 0xcd, 0x8d, 0x44, 0x57, 0x01, 0xce, 0x36, 0x8f, 0x02, 0x5d,
	0x62, 0x41, 0xbc, 0xb4, 0x65, 0x9f, 0xd8, 0x60, 0xbc, 0x6f, 0xf9, 0x82, 0x7b, 0x41, 0x88, 0x73,
	0xa8, 0x1a, 0x49, 0x38, 0xe4, 0x8a, 0x6a, 0x6f, 0x03, 0xbb, 0x44, 0xb4, 0x49, 0x2b, 0x3e, 0x86,
	0x6a, 0x18, 0x22, 0x73, 0x5d, 0xb1, 0xb4, 0xe1, 0x65, 0x49, 0xfe, 0x1d, 0xff, 0xf4, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xa9, 0xde, 0x9b, 0xd9, 0x31, 0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteTreeClient is the client API for RemoteTree service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteTreeClient interface {
	FetchNode(ctx context.Context, in *NodeIsReadRequest, opts ...grpc.CallOption) (*Node, error)
	UnlockNode(ctx context.Context, in *NodeIsReadRequest, opts ...grpc.CallOption) (*Error, error)
	LookUpInode(ctx context.Context, in *LookUpInodeRequest, opts ...grpc.CallOption) (*LookUpInodeReply, error)
	GetInodeAttributes(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*GetInodeAttributesReply, error)
	SetInodeAttributes(ctx context.Context, in *SetInodeAttributesRequest, opts ...grpc.CallOption) (*SetInodeAttributesReply, error)
	MkDir(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirReply, error)
	CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*CreateNodeReply, error)
	CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*CreateFileReply, error)
	CreateSymlink(ctx context.Context, in *CreateSymlinkRequest, opts ...grpc.CallOption) (*CreateSymlinkReply, error)
	CreateLink(ctx context.Context, in *CreateLinkRequest, opts ...grpc.CallOption) (*CreateLinkReply, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*Error, error)
	RmDir(ctx context.Context, in *RmDirRequest, opts ...grpc.CallOption) (*Error, error)
	Unlink(ctx context.Context, in *UnlinkRequest, opts ...grpc.CallOption) (*Error, error)
	OpenDir(ctx context.Context, in *OpenXRequest, opts ...grpc.CallOption) (*Uint64Reply, error)
	ReadDir(ctx context.Context, in *ReadXRequest, opts ...grpc.CallOption) (*ReadXReply, error)
	ReleaseHandle(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*Error, error)
	OpenFile(ctx context.Context, in *OpenXRequest, opts ...grpc.CallOption) (*Uint64Reply, error)
	ReadFile(ctx context.Context, in *ReadXRequest, opts ...grpc.CallOption) (*ReadXReply, error)
	WriteFile(ctx context.Context, in *WriteXRequest, opts ...grpc.CallOption) (*Uint64Reply, error)
	ReadSymlink(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*ReadSymlinkReply, error)
	GetXattr(ctx context.Context, in *GetXattrRequest, opts ...grpc.CallOption) (*ReadXReply, error)
	ListXattr(ctx context.Context, in *ListXattrRequest, opts ...grpc.CallOption) (*ReadXReply, error)
	RemoveXattr(ctx context.Context, in *RemoveXattrRequest, opts ...grpc.CallOption) (*Error, error)
	SetXattr(ctx context.Context, in *SetXattrRequest, opts ...grpc.CallOption) (*Error, error)
	Fallocate(ctx context.Context, in *FallocateRequest, opts ...grpc.CallOption) (*Error, error)
	QueryOwner(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*Addr, error)
	QueryAddr(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*Addr, error)
	Allocate(ctx context.Context, in *OwnerId, opts ...grpc.CallOption) (*UInt64ID, error)
	Deallocate(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*IsOK, error)
	RegisterOwner(ctx context.Context, in *Addr, opts ...grpc.CallOption) (*OwnerId, error)
	RemoveOwner(ctx context.Context, in *OwnerId, opts ...grpc.CallOption) (*IsOK, error)
	AllocateRoot(ctx context.Context, in *OwnerId, opts ...grpc.CallOption) (*IsOK, error)
}

type remoteTreeClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteTreeClient(cc grpc.ClientConnInterface) RemoteTreeClient {
	return &remoteTreeClient{cc}
}

func (c *remoteTreeClient) FetchNode(ctx context.Context, in *NodeIsReadRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/FetchNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) UnlockNode(ctx context.Context, in *NodeIsReadRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/UnlockNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) LookUpInode(ctx context.Context, in *LookUpInodeRequest, opts ...grpc.CallOption) (*LookUpInodeReply, error) {
	out := new(LookUpInodeReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/LookUpInode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) GetInodeAttributes(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*GetInodeAttributesReply, error) {
	out := new(GetInodeAttributesReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/GetInodeAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) SetInodeAttributes(ctx context.Context, in *SetInodeAttributesRequest, opts ...grpc.CallOption) (*SetInodeAttributesReply, error) {
	out := new(SetInodeAttributesReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/SetInodeAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) MkDir(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirReply, error) {
	out := new(MkDirReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/MkDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*CreateNodeReply, error) {
	out := new(CreateNodeReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/CreateNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*CreateFileReply, error) {
	out := new(CreateFileReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/CreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) CreateSymlink(ctx context.Context, in *CreateSymlinkRequest, opts ...grpc.CallOption) (*CreateSymlinkReply, error) {
	out := new(CreateSymlinkReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/CreateSymlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) CreateLink(ctx context.Context, in *CreateLinkRequest, opts ...grpc.CallOption) (*CreateLinkReply, error) {
	out := new(CreateLinkReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/CreateLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) RmDir(ctx context.Context, in *RmDirRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/RmDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) Unlink(ctx context.Context, in *UnlinkRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/Unlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) OpenDir(ctx context.Context, in *OpenXRequest, opts ...grpc.CallOption) (*Uint64Reply, error) {
	out := new(Uint64Reply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/OpenDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) ReadDir(ctx context.Context, in *ReadXRequest, opts ...grpc.CallOption) (*ReadXReply, error) {
	out := new(ReadXReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/ReadDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) ReleaseHandle(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/ReleaseHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) OpenFile(ctx context.Context, in *OpenXRequest, opts ...grpc.CallOption) (*Uint64Reply, error) {
	out := new(Uint64Reply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/OpenFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) ReadFile(ctx context.Context, in *ReadXRequest, opts ...grpc.CallOption) (*ReadXReply, error) {
	out := new(ReadXReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/ReadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) WriteFile(ctx context.Context, in *WriteXRequest, opts ...grpc.CallOption) (*Uint64Reply, error) {
	out := new(Uint64Reply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/WriteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) ReadSymlink(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*ReadSymlinkReply, error) {
	out := new(ReadSymlinkReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/ReadSymlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) GetXattr(ctx context.Context, in *GetXattrRequest, opts ...grpc.CallOption) (*ReadXReply, error) {
	out := new(ReadXReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/GetXattr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) ListXattr(ctx context.Context, in *ListXattrRequest, opts ...grpc.CallOption) (*ReadXReply, error) {
	out := new(ReadXReply)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/ListXattr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) RemoveXattr(ctx context.Context, in *RemoveXattrRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/RemoveXattr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) SetXattr(ctx context.Context, in *SetXattrRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/SetXattr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) Fallocate(ctx context.Context, in *FallocateRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/Fallocate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) QueryOwner(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*Addr, error) {
	out := new(Addr)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/QueryOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) QueryAddr(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*Addr, error) {
	out := new(Addr)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/QueryAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) Allocate(ctx context.Context, in *OwnerId, opts ...grpc.CallOption) (*UInt64ID, error) {
	out := new(UInt64ID)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/Allocate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) Deallocate(ctx context.Context, in *UInt64ID, opts ...grpc.CallOption) (*IsOK, error) {
	out := new(IsOK)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/Deallocate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) RegisterOwner(ctx context.Context, in *Addr, opts ...grpc.CallOption) (*OwnerId, error) {
	out := new(OwnerId)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/RegisterOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) RemoveOwner(ctx context.Context, in *OwnerId, opts ...grpc.CallOption) (*IsOK, error) {
	out := new(IsOK)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/RemoveOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteTreeClient) AllocateRoot(ctx context.Context, in *OwnerId, opts ...grpc.CallOption) (*IsOK, error) {
	out := new(IsOK)
	err := c.cc.Invoke(ctx, "/remotetree.RemoteTree/AllocateRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteTreeServer is the server API for RemoteTree service.
type RemoteTreeServer interface {
	FetchNode(context.Context, *NodeIsReadRequest) (*Node, error)
	UnlockNode(context.Context, *NodeIsReadRequest) (*Error, error)
	LookUpInode(context.Context, *LookUpInodeRequest) (*LookUpInodeReply, error)
	GetInodeAttributes(context.Context, *UInt64ID) (*GetInodeAttributesReply, error)
	SetInodeAttributes(context.Context, *SetInodeAttributesRequest) (*SetInodeAttributesReply, error)
	MkDir(context.Context, *MkDirRequest) (*MkDirReply, error)
	CreateNode(context.Context, *CreateNodeRequest) (*CreateNodeReply, error)
	CreateFile(context.Context, *CreateFileRequest) (*CreateFileReply, error)
	CreateSymlink(context.Context, *CreateSymlinkRequest) (*CreateSymlinkReply, error)
	CreateLink(context.Context, *CreateLinkRequest) (*CreateLinkReply, error)
	Rename(context.Context, *RenameRequest) (*Error, error)
	RmDir(context.Context, *RmDirRequest) (*Error, error)
	Unlink(context.Context, *UnlinkRequest) (*Error, error)
	OpenDir(context.Context, *OpenXRequest) (*Uint64Reply, error)
	ReadDir(context.Context, *ReadXRequest) (*ReadXReply, error)
	ReleaseHandle(context.Context, *UInt64ID) (*Error, error)
	OpenFile(context.Context, *OpenXRequest) (*Uint64Reply, error)
	ReadFile(context.Context, *ReadXRequest) (*ReadXReply, error)
	WriteFile(context.Context, *WriteXRequest) (*Uint64Reply, error)
	ReadSymlink(context.Context, *UInt64ID) (*ReadSymlinkReply, error)
	GetXattr(context.Context, *GetXattrRequest) (*ReadXReply, error)
	ListXattr(context.Context, *ListXattrRequest) (*ReadXReply, error)
	RemoveXattr(context.Context, *RemoveXattrRequest) (*Error, error)
	SetXattr(context.Context, *SetXattrRequest) (*Error, error)
	Fallocate(context.Context, *FallocateRequest) (*Error, error)
	QueryOwner(context.Context, *UInt64ID) (*Addr, error)
	QueryAddr(context.Context, *UInt64ID) (*Addr, error)
	Allocate(context.Context, *OwnerId) (*UInt64ID, error)
	Deallocate(context.Context, *UInt64ID) (*IsOK, error)
	RegisterOwner(context.Context, *Addr) (*OwnerId, error)
	RemoveOwner(context.Context, *OwnerId) (*IsOK, error)
	AllocateRoot(context.Context, *OwnerId) (*IsOK, error)
}

// UnimplementedRemoteTreeServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteTreeServer struct {
}

func (*UnimplementedRemoteTreeServer) FetchNode(ctx context.Context, req *NodeIsReadRequest) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchNode not implemented")
}
func (*UnimplementedRemoteTreeServer) UnlockNode(ctx context.Context, req *NodeIsReadRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockNode not implemented")
}
func (*UnimplementedRemoteTreeServer) LookUpInode(ctx context.Context, req *LookUpInodeRequest) (*LookUpInodeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LookUpInode not implemented")
}
func (*UnimplementedRemoteTreeServer) GetInodeAttributes(ctx context.Context, req *UInt64ID) (*GetInodeAttributesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInodeAttributes not implemented")
}
func (*UnimplementedRemoteTreeServer) SetInodeAttributes(ctx context.Context, req *SetInodeAttributesRequest) (*SetInodeAttributesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInodeAttributes not implemented")
}
func (*UnimplementedRemoteTreeServer) MkDir(ctx context.Context, req *MkDirRequest) (*MkDirReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MkDir not implemented")
}
func (*UnimplementedRemoteTreeServer) CreateNode(ctx context.Context, req *CreateNodeRequest) (*CreateNodeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNode not implemented")
}
func (*UnimplementedRemoteTreeServer) CreateFile(ctx context.Context, req *CreateFileRequest) (*CreateFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFile not implemented")
}
func (*UnimplementedRemoteTreeServer) CreateSymlink(ctx context.Context, req *CreateSymlinkRequest) (*CreateSymlinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSymlink not implemented")
}
func (*UnimplementedRemoteTreeServer) CreateLink(ctx context.Context, req *CreateLinkRequest) (*CreateLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLink not implemented")
}
func (*UnimplementedRemoteTreeServer) Rename(ctx context.Context, req *RenameRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}
func (*UnimplementedRemoteTreeServer) RmDir(ctx context.Context, req *RmDirRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RmDir not implemented")
}
func (*UnimplementedRemoteTreeServer) Unlink(ctx context.Context, req *UnlinkRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unlink not implemented")
}
func (*UnimplementedRemoteTreeServer) OpenDir(ctx context.Context, req *OpenXRequest) (*Uint64Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenDir not implemented")
}
func (*UnimplementedRemoteTreeServer) ReadDir(ctx context.Context, req *ReadXRequest) (*ReadXReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadDir not implemented")
}
func (*UnimplementedRemoteTreeServer) ReleaseHandle(ctx context.Context, req *UInt64ID) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseHandle not implemented")
}
func (*UnimplementedRemoteTreeServer) OpenFile(ctx context.Context, req *OpenXRequest) (*Uint64Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenFile not implemented")
}
func (*UnimplementedRemoteTreeServer) ReadFile(ctx context.Context, req *ReadXRequest) (*ReadXReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFile not implemented")
}
func (*UnimplementedRemoteTreeServer) WriteFile(ctx context.Context, req *WriteXRequest) (*Uint64Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteFile not implemented")
}
func (*UnimplementedRemoteTreeServer) ReadSymlink(ctx context.Context, req *UInt64ID) (*ReadSymlinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadSymlink not implemented")
}
func (*UnimplementedRemoteTreeServer) GetXattr(ctx context.Context, req *GetXattrRequest) (*ReadXReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetXattr not implemented")
}
func (*UnimplementedRemoteTreeServer) ListXattr(ctx context.Context, req *ListXattrRequest) (*ReadXReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListXattr not implemented")
}
func (*UnimplementedRemoteTreeServer) RemoveXattr(ctx context.Context, req *RemoveXattrRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveXattr not implemented")
}
func (*UnimplementedRemoteTreeServer) SetXattr(ctx context.Context, req *SetXattrRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetXattr not implemented")
}
func (*UnimplementedRemoteTreeServer) Fallocate(ctx context.Context, req *FallocateRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fallocate not implemented")
}
func (*UnimplementedRemoteTreeServer) QueryOwner(ctx context.Context, req *UInt64ID) (*Addr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryOwner not implemented")
}
func (*UnimplementedRemoteTreeServer) QueryAddr(ctx context.Context, req *UInt64ID) (*Addr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAddr not implemented")
}
func (*UnimplementedRemoteTreeServer) Allocate(ctx context.Context, req *OwnerId) (*UInt64ID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Allocate not implemented")
}
func (*UnimplementedRemoteTreeServer) Deallocate(ctx context.Context, req *UInt64ID) (*IsOK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deallocate not implemented")
}
func (*UnimplementedRemoteTreeServer) RegisterOwner(ctx context.Context, req *Addr) (*OwnerId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterOwner not implemented")
}
func (*UnimplementedRemoteTreeServer) RemoveOwner(ctx context.Context, req *OwnerId) (*IsOK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveOwner not implemented")
}
func (*UnimplementedRemoteTreeServer) AllocateRoot(ctx context.Context, req *OwnerId) (*IsOK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocateRoot not implemented")
}

func RegisterRemoteTreeServer(s *grpc.Server, srv RemoteTreeServer) {
	s.RegisterService(&_RemoteTree_serviceDesc, srv)
}

func _RemoteTree_FetchNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeIsReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).FetchNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/FetchNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).FetchNode(ctx, req.(*NodeIsReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_UnlockNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeIsReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).UnlockNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/UnlockNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).UnlockNode(ctx, req.(*NodeIsReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_LookUpInode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookUpInodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).LookUpInode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/LookUpInode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).LookUpInode(ctx, req.(*LookUpInodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_GetInodeAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UInt64ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).GetInodeAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/GetInodeAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).GetInodeAttributes(ctx, req.(*UInt64ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_SetInodeAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetInodeAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).SetInodeAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/SetInodeAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).SetInodeAttributes(ctx, req.(*SetInodeAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_MkDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).MkDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/MkDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).MkDir(ctx, req.(*MkDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_CreateNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).CreateNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/CreateNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).CreateNode(ctx, req.(*CreateNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/CreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).CreateFile(ctx, req.(*CreateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_CreateSymlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSymlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).CreateSymlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/CreateSymlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).CreateSymlink(ctx, req.(*CreateSymlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_CreateLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).CreateLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/CreateLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).CreateLink(ctx, req.(*CreateLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_RmDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RmDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).RmDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/RmDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).RmDir(ctx, req.(*RmDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_Unlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).Unlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/Unlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).Unlink(ctx, req.(*UnlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_OpenDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).OpenDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/OpenDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).OpenDir(ctx, req.(*OpenXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_ReadDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).ReadDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/ReadDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).ReadDir(ctx, req.(*ReadXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_ReleaseHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UInt64ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).ReleaseHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/ReleaseHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).ReleaseHandle(ctx, req.(*UInt64ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_OpenFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).OpenFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/OpenFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).OpenFile(ctx, req.(*OpenXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_ReadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).ReadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/ReadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).ReadFile(ctx, req.(*ReadXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_WriteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteXRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).WriteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/WriteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).WriteFile(ctx, req.(*WriteXRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_ReadSymlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UInt64ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).ReadSymlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/ReadSymlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).ReadSymlink(ctx, req.(*UInt64ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_GetXattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetXattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).GetXattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/GetXattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).GetXattr(ctx, req.(*GetXattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_ListXattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListXattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).ListXattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/ListXattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).ListXattr(ctx, req.(*ListXattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_RemoveXattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveXattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).RemoveXattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/RemoveXattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).RemoveXattr(ctx, req.(*RemoveXattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_SetXattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetXattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).SetXattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/SetXattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).SetXattr(ctx, req.(*SetXattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_Fallocate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FallocateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).Fallocate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/Fallocate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).Fallocate(ctx, req.(*FallocateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_QueryOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UInt64ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).QueryOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/QueryOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).QueryOwner(ctx, req.(*UInt64ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_QueryAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UInt64ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).QueryAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/QueryAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).QueryAddr(ctx, req.(*UInt64ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_Allocate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).Allocate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/Allocate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).Allocate(ctx, req.(*OwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_Deallocate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UInt64ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).Deallocate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/Deallocate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).Deallocate(ctx, req.(*UInt64ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_RegisterOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Addr)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).RegisterOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/RegisterOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).RegisterOwner(ctx, req.(*Addr))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_RemoveOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).RemoveOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/RemoveOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).RemoveOwner(ctx, req.(*OwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteTree_AllocateRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteTreeServer).AllocateRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotetree.RemoteTree/AllocateRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteTreeServer).AllocateRoot(ctx, req.(*OwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteTree_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remotetree.RemoteTree",
	HandlerType: (*RemoteTreeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchNode",
			Handler:    _RemoteTree_FetchNode_Handler,
		},
		{
			MethodName: "UnlockNode",
			Handler:    _RemoteTree_UnlockNode_Handler,
		},
		{
			MethodName: "LookUpInode",
			Handler:    _RemoteTree_LookUpInode_Handler,
		},
		{
			MethodName: "GetInodeAttributes",
			Handler:    _RemoteTree_GetInodeAttributes_Handler,
		},
		{
			MethodName: "SetInodeAttributes",
			Handler:    _RemoteTree_SetInodeAttributes_Handler,
		},
		{
			MethodName: "MkDir",
			Handler:    _RemoteTree_MkDir_Handler,
		},
		{
			MethodName: "CreateNode",
			Handler:    _RemoteTree_CreateNode_Handler,
		},
		{
			MethodName: "CreateFile",
			Handler:    _RemoteTree_CreateFile_Handler,
		},
		{
			MethodName: "CreateSymlink",
			Handler:    _RemoteTree_CreateSymlink_Handler,
		},
		{
			MethodName: "CreateLink",
			Handler:    _RemoteTree_CreateLink_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _RemoteTree_Rename_Handler,
		},
		{
			MethodName: "RmDir",
			Handler:    _RemoteTree_RmDir_Handler,
		},
		{
			MethodName: "Unlink",
			Handler:    _RemoteTree_Unlink_Handler,
		},
		{
			MethodName: "OpenDir",
			Handler:    _RemoteTree_OpenDir_Handler,
		},
		{
			MethodName: "ReadDir",
			Handler:    _RemoteTree_ReadDir_Handler,
		},
		{
			MethodName: "ReleaseHandle",
			Handler:    _RemoteTree_ReleaseHandle_Handler,
		},
		{
			MethodName: "OpenFile",
			Handler:    _RemoteTree_OpenFile_Handler,
		},
		{
			MethodName: "ReadFile",
			Handler:    _RemoteTree_ReadFile_Handler,
		},
		{
			MethodName: "WriteFile",
			Handler:    _RemoteTree_WriteFile_Handler,
		},
		{
			MethodName: "ReadSymlink",
			Handler:    _RemoteTree_ReadSymlink_Handler,
		},
		{
			MethodName: "GetXattr",
			Handler:    _RemoteTree_GetXattr_Handler,
		},
		{
			MethodName: "ListXattr",
			Handler:    _RemoteTree_ListXattr_Handler,
		},
		{
			MethodName: "RemoveXattr",
			Handler:    _RemoteTree_RemoveXattr_Handler,
		},
		{
			MethodName: "SetXattr",
			Handler:    _RemoteTree_SetXattr_Handler,
		},
		{
			MethodName: "Fallocate",
			Handler:    _RemoteTree_Fallocate_Handler,
		},
		{
			MethodName: "QueryOwner",
			Handler:    _RemoteTree_QueryOwner_Handler,
		},
		{
			MethodName: "QueryAddr",
			Handler:    _RemoteTree_QueryAddr_Handler,
		},
		{
			MethodName: "Allocate",
			Handler:    _RemoteTree_Allocate_Handler,
		},
		{
			MethodName: "Deallocate",
			Handler:    _RemoteTree_Deallocate_Handler,
		},
		{
			MethodName: "RegisterOwner",
			Handler:    _RemoteTree_RegisterOwner_Handler,
		},
		{
			MethodName: "RemoveOwner",
			Handler:    _RemoteTree_RemoveOwner_Handler,
		},
		{
			MethodName: "AllocateRoot",
			Handler:    _RemoteTree_AllocateRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "remotetree.proto",
}
