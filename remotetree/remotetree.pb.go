// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remotetree.proto

package remotetree

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Chunk struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{0}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReadRequest struct {
	Path                 *Path    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Start                int64    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Length               int64    `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{1}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetPath() *Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *ReadRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ReadRequest) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type Path struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}
func (*Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8de7cc35295e1fb, []int{2}
}

func (m *Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Path.Unmarshal(m, b)
}
func (m *Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Path.Marshal(b, m, deterministic)
}
func (m *Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Path.Merge(m, src)
}
func (m *Path) XXX_Size() int {
	return xxx_messageInfo_Path.Size(m)
}
func (m *Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Path proto.InternalMessageInfo

func (m *Path) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func init() {
	proto.RegisterType((*Chunk)(nil), "remotetree.Chunk")
	proto.RegisterType((*ReadRequest)(nil), "remotetree.ReadRequest")
	proto.RegisterType((*Path)(nil), "remotetree.Path")
}

func init() {
	proto.RegisterFile("remotetree.proto", fileDescriptor_f8de7cc35295e1fb)
}

var fileDescriptor_f8de7cc35295e1fb = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x50, 0xcb, 0x4a, 0xc5, 0x30,
	0x10, 0x35, 0x6d, 0x5a, 0x70, 0xea, 0xa2, 0x06, 0xd1, 0x20, 0x2e, 0x4a, 0x70, 0xd1, 0x55, 0xd1,
	0x0a, 0xfe, 0x80, 0x7e, 0x40, 0x09, 0xfe, 0xc0, 0x48, 0x07, 0x03, 0xde, 0x3e, 0x6e, 0x3a, 0xfd,
	0xff, 0xcb, 0x4d, 0x0b, 0xcd, 0x2e, 0xe7, 0x1c, 0xce, 0x23, 0x03, 0xa5, 0xa7, 0x61, 0x62, 0x62,
	0x4f, 0xd4, 0xcc, 0x7e, 0xe2, 0x49, 0xc1, 0xc1, 0x98, 0x77, 0xc8, 0xbe, 0xdc, 0x3a, 0xfe, 0xab,
	0x07, 0xc8, 0x16, 0x46, 0xcf, 0x5a, 0x54, 0xa2, 0x4e, 0xed, 0x06, 0x94, 0x02, 0xd9, 0x23, 0xa3,
	0x4e, 0x2a, 0x51, 0xdf, 0xd9, 0xf0, 0x36, 0x08, 0x85, 0x25, 0xec, 0x2d, 0x9d, 0x57, 0x5a, 0x58,
	0xbd, 0x82, 0x9c, 0x91, 0x5d, 0xf0, 0x15, 0x6d, 0xd9, 0x44, 0x75, 0x1d, 0xb2, 0xb3, 0x41, 0x3d,
	0xe2, 0x93, 0x38, 0xfe, 0x11, 0xf2, 0x13, 0x8d, 0x7f, 0xec, 0x74, 0x1a, 0xe8, 0x1d, 0x99, 0x17,
	0x90, 0xdd, 0xee, 0x1a, 0x71, 0xa0, 0x45, 0x8b, 0x2a, 0xad, 0x6f, 0xed, 0x06, 0xda, 0x6f, 0x00,
	0x1b, 0x4a, 0x7e, 0x3c, 0x91, 0xfa, 0x04, 0x79, 0x9d, 0xa3, 0x9e, 0xe2, 0xe6, 0x68, 0xe0, 0xf3,
	0x7d, 0x2c, 0x84, 0xcf, 0x9a, 0x9b, 0x37, 0xf1, 0x9b, 0x87, 0x63, 0x7c, 0x5c, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xea, 0xf5, 0x47, 0xff, 0x20, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteTreeClient is the client API for RemoteTree service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteTreeClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (RemoteTree_ReadClient, error)
}

type remoteTreeClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteTreeClient(cc grpc.ClientConnInterface) RemoteTreeClient {
	return &remoteTreeClient{cc}
}

func (c *remoteTreeClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (RemoteTree_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RemoteTree_serviceDesc.Streams[0], "/remotetree.RemoteTree/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &remoteTreeReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RemoteTree_ReadClient interface {
	Recv() (*Chunk, error)
	grpc.ClientStream
}

type remoteTreeReadClient struct {
	grpc.ClientStream
}

func (x *remoteTreeReadClient) Recv() (*Chunk, error) {
	m := new(Chunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RemoteTreeServer is the server API for RemoteTree service.
type RemoteTreeServer interface {
	Read(*ReadRequest, RemoteTree_ReadServer) error
}

// UnimplementedRemoteTreeServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteTreeServer struct {
}

func (*UnimplementedRemoteTreeServer) Read(req *ReadRequest, srv RemoteTree_ReadServer) error {
	return status.Errorf(codes.Unimplemented, "method Read not implemented")
}

func RegisterRemoteTreeServer(s *grpc.Server, srv RemoteTreeServer) {
	s.RegisterService(&_RemoteTree_serviceDesc, srv)
}

func _RemoteTree_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RemoteTreeServer).Read(m, &remoteTreeReadServer{stream})
}

type RemoteTree_ReadServer interface {
	Send(*Chunk) error
	grpc.ServerStream
}

type remoteTreeReadServer struct {
	grpc.ServerStream
}

func (x *remoteTreeReadServer) Send(m *Chunk) error {
	return x.ServerStream.SendMsg(m)
}

var _RemoteTree_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remotetree.RemoteTree",
	HandlerType: (*RemoteTreeServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _RemoteTree_Read_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "remotetree.proto",
}
